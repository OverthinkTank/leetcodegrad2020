589. N-ary Tree Preorder Traversal
Easy

Given an n-ary tree, return the preorder traversal of its nodes' values.
Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).
Example 1:

Input: root = [1,null,3,2,4,null,5,6]
Output: [1,3,5,6,2,4]


SOLUTION: STACK for iterative solution OR recursive function. (Hint: Traverse node in root.children)

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> lst = new ArrayList<>();
        
        if(root==null){
            return lst;
        }
        
        Stack<Node> stk = new Stack<>();
        stk.push(root);
            
        while(!stk.isEmpty()){
            root = stk.pop();
            lst.add(root.val);
            for(int i = root.children.size()-1 ; i >= 0 ; i--){
                stk.push(root.children.get(i));
            }
        }    
        return lst;
    }
}


