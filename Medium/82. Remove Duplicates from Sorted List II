82. Remove Duplicates from Sorted List II
Medium

Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

Return the linked list sorted as well.

Example 1:

Input: 1->2->3->3->4->4->5
Output: 1->2->5

Example 2:

Input: 1->1->1->2->3
Output: 2->3

SOLUTION:
MySoln:
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode curr = head;        
        Map<Integer,Integer> hmap = new TreeMap<>();      
        while(curr!=null){
            hmap.put(curr.val, hmap.getOrDefault(curr.val,0)+1);
            curr=curr.next;
        }

        ListNode tempHead = new ListNode(0);
        ListNode temp = tempHead;
        for(int i : hmap.keySet()){          
            if(hmap.get(i)==1){
                tempHead.next = new ListNode(i);
                tempHead = tempHead.next;
            }else{
                continue;
            }
        }

        return temp.next;
    }
}
