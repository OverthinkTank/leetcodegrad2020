144. Binary Tree Preorder Traversal

Given the root of a binary tree, return the preorder traversal of its nodes' values.
Example 1:
Input: root = [1,null,2,3]
Output: [1,2,3]

SOLUTION: **DO AGAIN - Easier than PostOrder and InOrder**


class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {

        Stack<TreeNode> stk = new Stack<TreeNode>();
        List<Integer> result = new ArrayList<>();
        if(root==null){
            return result;
        }
        
        stk.push(root);
        
        while(!stk.isEmpty()){
            
            TreeNode current = stk.pop();
            result.add(current.val);  
            
            
            /*Processing/Adding child of CURRENT*/
            if(current.right!=null){
                stk.push(current.right);
            }
            
            if(current.left!=null){
                stk.push(current.left);
            }

           // System.out.println(" current: " + current.val);     
        }
        
        return result;
    }    
}
